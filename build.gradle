plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    bootJar{
        enabled false
    }
}

subprojects {

    apply plugin: 'signing'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'

    def newVersion = new File(rootDir.getAbsolutePath(), "VERSION.md").readLines()[0]

    version = newVersion
    group = 'com.isxcode.oxygen'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {

        implementation('org.springframework.boot:spring-boot-starter-web')

        testImplementation('org.springframework.boot:spring-boot-starter-test')

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
        implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
        implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.17.1'

        implementation 'org.junit.jupiter:junit-jupiter'
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    }

    publishing {

        repositories {
            maven {
                name = 'GitHubPackages'
                def githubRepoUrl = 'https://maven.pkg.github.com/isxcode/spring-oxygen'
                url = githubRepoUrl
                credentials {
                    username = project.findProperty('gpr.user') ?: System.getenv('USERNAME')
                    password = project.findProperty('gpr.key') ?: System.getenv('TOKEN')
                }
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }

    publishing {

        repositories {
            maven {
                name = "Sonatype"
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = project.findProperty("sonatypeUsername") ?: System.getenv("SONATYPE_NAME")
                    password = project.findProperty("sonatypePassword") ?: System.getenv("SONATYPE_PASSWORD")
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    name = project.getName()
                    description = 'Spring rapid development integration framework.'
                    url = 'https://spring-oxygen.isxcode.com'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'ispong'
                            name = 'ispong'
                            email = 'ispong@outlook.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/isxcode/spring-oxygen.git'
                        developerConnection = 'scm:git:ssh://github.com/isxcode/spring-oxygen.git'
                        url = 'https://github.com/isxcode/spring-oxygen'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        options.encoding("UTF-8")
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    jacoco {
        toolVersion = "0.8.6"
    }
    bootJar {
        enabled false
    }
    jar {
        classifier('')
    }
    bootRun {
        enabled false
    }
}
